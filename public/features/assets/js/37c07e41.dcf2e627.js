"use strict";(self.webpackChunkfeatures=self.webpackChunkfeatures||[]).push([[737],{4911:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>c});var a=n(4848),o=n(8453);const i={},s=void 0,r={permalink:"/features/Why PAL",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/Why PAL.md",source:"@site/blog/Why PAL.md",title:"Why PAL",description:"Origineering\u2019s corner stone product is a computer programming language / Operating System called PAL, (acronym for Pan Application Language). It isn\u2019t just a software development tool, but a complete paradigm shift, and is anticipated to be a disruptive technology, like the automobile was to the horse and buggy.",date:"2024-06-28T12:57:48.886Z",tags:[],readingTime:4.085,hasTruncateMarker:!1,authors:[],frontMatter:{},unlisted:!1,prevItem:{title:"Planets & Moons",permalink:"/features/Planets & Moons"},nextItem:{title:"Phrasing",permalink:"/features/Phrasing"}},l={authorsImageUrls:[]},c=[];function h(e){const t={a:"a",p:"p",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"Origineering\u2019s corner stone product is a computer programming language / Operating System called PAL, (acronym for Pan Application Language). It isn\u2019t just a software development tool, but a complete paradigm shift, and is anticipated to be a disruptive technology, like the automobile was to the horse and buggy."}),"\n",(0,a.jsx)(t.p,{children:"If computer programming languages were flying machines, than all of them would be lighter than air craft. Whether they are procedural, object oriented, functional, or concatenative, such differences between them are the kind of variations between hot air balloons, helium based dirigibles, and hydrogen filled zeppelins."}),"\n",(0,a.jsx)(t.p,{children:"The last 70 years has witnessed an endless variety of tinkering, tweaking, and engineering to make them faster, safer, and able to carry more payloads \u2014 but in the end, they all are simply just balloons, in fancy shapes, with fancy fans strapped on to them."}),"\n",(0,a.jsx)(t.p,{children:"PAL represents an invention that is a completely new type of flying machine that is nothing like the previous menagerie of \u201cair ships\u201d. It is based on totally new principles and technology which makes it faster, easier and safer to use by orders of magnitude."}),"\n",(0,a.jsx)(t.p,{children:"So, the natural question to ask, is how so? Why are all other computer software languages like air ships (balloons) whereas PAL is like an airplane or helicopter?"}),"\n",(0,a.jsx)(t.p,{children:"For the answer we need to consider this point: What is the fundamental thing that they all have in common with each other, which makes PAL unique from any of them? In spite of such diversity, what is the glaring fundamental flaw that unites every existing computer language, no matter whether it be C#, Ruby, Python, Perl, D, Lua, Oberon, Modula, Oz, Pascal, Ada, Prolog, Java, occam, Small Talk, PL/1, Forth, APL, Basic, Algol, Lisp, Cobal, Fortran, \u2026etc.?"}),"\n",(0,a.jsx)(t.p,{children:"It is this: Linguistically speaking, they are all syntactic straight jackets. They do NOT allow computer code to mirror and accurately reflect the problem domain in the solution domain. Using these languages is like trying to perform surgery with oven mitts on, or to dance while wearing a parka with scarf and boots. They are clumsy and crude tools to the task. This is why more and more languages keep getting invented and developed. Because none of the languages so far, have been adequate."}),"\n",(0,a.jsx)(t.p,{children:"To be technical, using terms of Concept Programming, they all suffer from high signal/noise ratio (fraction of the code space used for representing actual concepts, as opposed to implementation information), high syntactic noise (discrepancies between the concept and the syntax used to represent it), high semantic noise (discrepancies between the expected meaning or behavior of the concept and its actual meaning or behavior in the code), and low bandwidth (how much of the concept space a given code construct can represent)."}),"\n",(0,a.jsxs)(t.p,{children:["For concrete examples see this web-link: ",(0,a.jsx)(t.a,{href:"http://www.webpage.net",children:"www.webpage.net"})]}),"\n",(0,a.jsx)(t.p,{children:"So how does PAL address these issues? For the time being, we can\u2019t reveal specific details since PAL is an Intellectual Property that needs to be protected at this time, so we will just list some of PAL\u2019s attributes which give it an unfair advantage over all other computer languages."}),"\n",(0,a.jsx)(t.p,{children:"PAL has the following features:"}),"\n",(0,a.jsx)(t.p,{children:"Most readable code \u2014 since it executes \u201cpseudo code\u201d directly."}),"\n",(0,a.jsx)(t.p,{children:"Fastest development time."}),"\n",(0,a.jsx)(t.p,{children:"Fastest compilation time."}),"\n",(0,a.jsx)(t.p,{children:"Most robust and secure code (certified to be 100% bug free, when no 3rd party code is involved, like outside DLLs, or external APIs.) This is because the PAL team strictly adhere to a zero-bug-tolerance policy."}),"\n",(0,a.jsx)(t.p,{children:"Only language to have fuzzy logic operators \u2014 ideal for process control and discreet simulation applications."}),"\n",(0,a.jsx)(t.p,{children:"Only language that supports 2-D operand notation. All other languages are restricted to 1-D notation."}),"\n",(0,a.jsx)(t.p,{children:"Only language to allow creation of new operators as simply as creating new functions."}),"\n",(0,a.jsx)(t.p,{children:"Only language to support operator or function extensioning. Other languages just allow overloading."}),"\n",(0,a.jsx)(t.p,{children:"Implicit data flow is prohibited."}),"\n",(0,a.jsx)(t.p,{children:"No limitations on any symbol name; any character and/or glyph can be used."}),"\n",(0,a.jsx)(t.p,{children:"Allows all aspects of the language to be modified or redefined whether it be syntax, grammar, vocabulary or functions and operators."}),"\n",(0,a.jsx)(t.p,{children:"Allows multiple return values (tuples) for functions and operators."}),"\n",(0,a.jsx)(t.p,{children:"Has a minimum set keyword vocabulary since overloading is extensively used. For example, PAL\u2019s version of what is commonly known as a match or case statement, overloads the keyword if with the meaning of \u2018\u2018case\u2019\u2019 and overloads the keyword else with the meaning of \u2018\u2018otherwise\u2019\u2019. (So the additional words of \u2018\u2018case\u2019\u2019 and \u2018\u2018otherwise\u2019\u2019 are not needed.)"}),"\n",(0,a.jsx)(t.p,{children:"Executable object code can be decompiled back to source code."}),"\n",(0,a.jsx)(t.p,{children:"Is not bound by the Von Neumann bottle neck."}),"\n",(0,a.jsx)(t.p,{children:"Allows self-modifying code."}),"\n",(0,a.jsx)(t.p,{children:"Will run on any machine architecture; from micro controller firmware all the way to main frame super computer."}),"\n",(0,a.jsx)(t.p,{children:"PAL is not just a language or Operating System, it is a philosophy."}),"\n",(0,a.jsx)(t.p,{children:"Once a programmer tries developing software in PAL, he/she will never want to go back to the \u201cold way\u201d of doing things \u2013 because the old way sucks!"}),"\n",(0,a.jsx)(t.p,{children:"To be Continued \u2026"})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var a=n(6540);const o={},i=a.createContext(o);function s(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);